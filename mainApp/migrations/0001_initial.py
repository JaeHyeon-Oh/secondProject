# Generated by Django 3.2.12 on 2022-03-28 08:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('job_type', models.CharField(max_length=10, null=True)),
                ('job_sector', models.CharField(max_length=20, null=True)),
                ('profile_image', models.URLField(max_length=2000, null=True)),
                ('phonenumber', models.CharField(max_length=11)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('banner_id', models.AutoField(primary_key=True, serialize=False)),
                ('image_url', models.URLField(max_length=2000)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'banners',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('imageUrl', models.URLField(max_length=2000)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
            ],
            options={
                'db_table': 'contents',
            },
        ),
        migrations.CreateModel(
            name='detailDirectory',
            fields=[
                ('detail_directory_id', models.AutoField(primary_key=True, serialize=False)),
                ('detail_directory_name', models.CharField(max_length=10)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('category_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Expert',
            fields=[
                ('expert_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('area', models.CharField(max_length=10)),
                ('company_name', models.CharField(max_length=100, null=True)),
                ('is_connect', models.BooleanField(default=False)),
                ('expert_description', models.CharField(max_length=200)),
                ('level', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'expert',
            },
        ),
        migrations.CreateModel(
            name='mainDirectory',
            fields=[
                ('main_directory_id', models.AutoField(primary_key=True, serialize=False)),
                ('main_directory_name', models.CharField(max_length=10)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('category_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=20)),
                ('product_description', models.CharField(max_length=200)),
                ('price', models.IntegerField(default=10000, null=True)),
                ('image_url', models.URLField()),
                ('heart_count', models.IntegerField(default=0)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('index_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_id', models.AutoField(primary_key=True, serialize=False)),
                ('video_url', models.URLField(max_length=2000)),
            ],
            options={
                'db_table': 'videos',
            },
        ),
        migrations.CreateModel(
            name='VideoReview',
            fields=[
                ('videoReview_id', models.AutoField(primary_key=True, serialize=False)),
                ('videoReview_url', models.URLField()),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainApp.expert')),
            ],
            options={
                'db_table': 'videoReviews',
            },
        ),
        migrations.CreateModel(
            name='subDirectory',
            fields=[
                ('sub_directory_id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_directory_name', models.CharField(max_length=10)),
                ('banner_image', models.URLField(blank=True, null=True)),
                ('banner_text', models.CharField(max_length=20)),
                ('image_url', models.URLField(max_length=2000, null=True)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('category_id', models.IntegerField()),
                ('mainDirectory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mainDirectory', to='mainApp.maindirectory')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_name', models.CharField(max_length=20)),
                ('linkUrl', models.URLField(max_length=2000, null=True)),
                ('category_id', models.IntegerField()),
                ('detailDirectory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detailDirectory', to='mainApp.detaildirectory')),
                ('expert', models.ManyToManyField(to='mainApp.Expert')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_content', models.CharField(default='Good', max_length=200)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='mainApp.product')),
                ('writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reviews',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='Service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Service', to='mainApp.service'),
        ),
        migrations.AddField(
            model_name='product',
            name='expert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expert', to='mainApp.expert'),
        ),
        migrations.AddIndex(
            model_name='maindirectory',
            index=models.Index(fields=['category_id'], name='mainApp_mai_categor_92b533_idx'),
        ),
        migrations.AddField(
            model_name='expert',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='detaildirectory',
            name='subDirectory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subDirectory', to='mainApp.subdirectory'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='subdirectory',
            index=models.Index(fields=['category_id'], name='mainApp_sub_categor_cace92_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['category_id'], name='mainApp_ser_categor_0bde12_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['index_id'], name='mainApp_pro_index_i_0954e0_idx'),
        ),
        migrations.AddIndex(
            model_name='detaildirectory',
            index=models.Index(fields=['category_id'], name='mainApp_det_categor_928fa4_idx'),
        ),
    ]
